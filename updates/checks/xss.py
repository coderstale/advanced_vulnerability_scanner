import requests
from ratelimit import limits, sleep_and_retry
from updates.payloads.xss import xss_payloads

ONE_SECOND = 1

@sleep_and_retry
@limits(calls=5, period=ONE_SECOND)
def check_xss(url):
    vulnerable = False
    for payload in xss_payloads:
        test_url = f"{url}?search={payload}"  # Modify the URL to include payloads
        try:
            response = requests.get(test_url)
            if payload in response.text:
                print(f"[+] XSS vulnerability found at {test_url}")
                vulnerable = True
                break
        except requests.RequestException as e:
            print(f"Request to {test_url} failed: {e}")
    return vulnerable

if __name__ == "__main__":
    url = input("Enter URL to test for XSS: ")
    result = check_xss(url)
    print(f"XSS vulnerability detected: {result}")
