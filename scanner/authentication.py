import requests
from urllib.parse import urljoin

# List of common weak passwords
common_passwords = [
    "123456", "password", "123456789", "12345678", "12345", "1234567", "1234567890", "qwerty", "abc123", "password1"
]

def check_weak_passwords(url, username_field, password_field, login_action, test_username):
    """
    Check if the application allows common weak passwords.
    """
    vulnerable_passwords = []
    session = requests.Session()
    login_url = urljoin(url, login_action)

    for password in common_passwords:
        data = {username_field: test_username, password_field: password}
        response = session.post(login_url, data=data)
        if "incorrect" not in response.text.lower():  # This condition will need to be adapted to your application's response
            vulnerable_passwords.append(password)
    
    return bool(vulnerable_passwords)

def check_mfa(url):
    """
    Check if the application requires multi-factor authentication.
    This is a placeholder function. Implement this check based on your application's specific requirements.
    """
    # Typically, you might check for the presence of an MFA prompt after entering valid credentials
    return False  # Returning False to indicate MFA is not implemented for now

def check_session_handling(url, username_field, password_field, login_action, logout_action, test_username, test_password):
    """
    Check if the application properly handles session invalidation on logout.
    """
    session = requests.Session()
    login_url = urljoin(url, login_action)
    logout_url = urljoin(url, logout_action)

    # Log in
    data = {username_field: test_username, password_field: test_password}
    response = session.post(login_url, data=data)

    # Store the session cookie
    session_cookie = session.cookies.get_dict()

    # Log out
    session.get(logout_url)

    # Attempt to reuse the session cookie
    session.cookies.update(session_cookie)
    response = session.get(url)

    if "login" not in response.text.lower():  # This condition will need to be adapted to your application's response
        return True  # Session handling is improper
    return False
