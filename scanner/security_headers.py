import requests

# List of important security headers and their descriptions
security_headers = {
    "Content-Security-Policy": "Helps prevent XSS attacks by defining where resources can be loaded from.",
    "X-Content-Type-Options": "Prevents browsers from MIME-sniffing a response away from the declared content-type.",
    "X-Frame-Options": "Protects against clickjacking by controlling whether the page can be framed.",
    "X-XSS-Protection": "Enables the XSS filter built into most browsers.",
    "Strict-Transport-Security": "Forces browsers to use HTTPS for future requests to the site.",
    "Referrer-Policy": "Controls how much referrer information should be included with requests.",
    "Permissions-Policy": "Defines which browser features can be used on the site."
}

def check_security_headers(url):
    """
    Given a `url`, checks for the presence and configuration of important security headers.
    """
    response = requests.get(url)
    headers = response.headers
    
    for header, description in security_headers.items():
        if header in headers:
            print(f"[+] {header} is present.")
            print(f"    Value: {headers[header]}")
        else:
            print(f"[-] {header} is missing.")
        print(f"    Description: {description}\n")

if __name__ == "__main__":
    target_url = input("Enter the URL to check for security headers: ")
    check_security_headers(target_url)
